name: CI/CD Pipeline

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["main"]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t devsecure-api .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "devsecure-api"
          format: "table"
          exit-code: "1"
          severity: "CRITICAL"

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Snyk scan (Node.js dependencies)
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --severity-threshold=high --fail-on=all

      - name: Snyk scan (Docker image) and export report
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          snyk container test devsecure-api \
            --file=Dockerfile \
            --severity-threshold=high \
            --exclude-base-image-vulns \
            --json > snyk-report.json

      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      - name: Generate HTML report
        run: snyk-to-html -i snyk-report.json -o snyk-report.html

      - name: Upload Snyk HTML report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk-report.html

      - name: Scan for secrets with Gitleaks
        uses: zricethezav/gitleaks-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to Docker Hub
        run: |
          docker tag devsecure-api ${{ secrets.DOCKER_USERNAME }}/devsecure-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/devsecure-api:latest
